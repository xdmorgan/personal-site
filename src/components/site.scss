// sass static rem px conversion
// see: for comments
$rem-base: 16;
@function to-rem($px) {
  @return ($px / $rem-base) * 1rem;
}

// hero gradients
:root {
  --dawn-gradient: linear-gradient(
    120deg,
    rgba(6, 97, 255, 1) 0%,
    rgba(255, 131, 84, 1) 67%,
    rgba(255, 213, 124, 1) 100%
  );
  --day-gradient: linear-gradient(
    120deg,
    rgb(39, 77, 140, 1) 0%,
    rgba(6, 97, 255, 1) 25%,
    rgba(6, 139, 255, 1) 45%,
    rgba(255, 213, 124, 1) 100%
  );
  --night-gradient: linear-gradient(
    -60deg,
    rgb(39, 77, 140, 1) 0%,
    rgb(23, 15, 46) 76%,
    rgba(24, 13, 31, 1) 100%
  );
  --dusk-gradient: linear-gradient(
    140deg,
    rgba(34, 15, 46, 1) 0%,
    rgba(89, 58, 180, 1) 40%,
    rgba(255, 131, 84, 1) 100%
  );
  // alt dusk gradient
  // rgba(34,15,46,1) 0%,
  // rgba(63,32,94,1) 20%,
  // rgba(255,131,84,1) 100%
}

// rest of config
:root {
  // probably don't need light & dark versions
  --stack-heading: 'Montserrat', 'Helvetica Neue', Helvetica, Arial,
    'Lucida Grande', sans-serif;
  --stack-default: 'IBM Plex Sans', 'Helvetica Neue', Helvetica, Arial,
    'Lucida Grande', sans-serif;

  // probably need light & dark versions
  --background-light: #f4f6fa;
  --background-light-rgba: rgba(244, 246, 250, 1);
  --background-dark: #2b2b31;
  --background-dark-rgba: rgba(43, 43, 49, 1);
  --accent: #0068fa;
  --shadow: 0 1px 2px rgba(0, 0, 0, 0.5);

  // provide defaults and overwrite with js
  // depending on the client-side time of day
  --background: var(--background-dark);
  --gradient: var(--night-gradient);

  --hero-bio-max: 510px;
}

// base styles
html {
  font-size: (($rem-base / 16) * 100%);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  box-sizing: border-box;
}
* {
  &,
  &:before,
  &:after {
    box-sizing: inherit;
  }
}
body {
  margin: 0;
  padding: 0;
  font-size: to-rem(16);
  font-family: var(--stack-default);
  background-color: var(--background);
  color: white;
}
h1,
p {
  margin-top: to-rem(16);
  margin-bottom: to-rem(16);
}

// partials
.Hero {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  min-height: to-rem(540);
  background: var(--gradient);
  transition: background 2s ease;

  h1 {
    font-size: to-rem(60);
    letter-spacing: to-rem(-2);
    font-family: var(--stack-heading);
    text-shadow: 0 to-rem(5) to-rem(5) rgba(0, 0, 0, 0.125);

    &:first-child {
      margin-top: 0;
    }
  }

  p {
    font-size: to-rem(18);
    line-height: 1.4;
    max-width: var(--hero-bio-max);

    &:last-child {
      margin-bottom: 0;
    }
  }

  a {
    color: white;
    font-weight: 700;
    text-decoration: none;
    box-shadow: inset 0 -0.125em rgba(white, 0.25);
    transition: box-shadow 180ms ease-out;

    &:hover {
      box-shadow: inset 0 -0.4em var(--accent);
    }
  }

  @media (min-width: 600px) {
    align-items: flex-start;
    text-align: left;

    h1 {
      font-size: to-rem(100);
    }
  }
}

@media screen and (min-height: to-rem(540)) {
  html,
  body,
  #___gatsby,
  #___gatsby > div,
  .Hero {
    height: 100%;
  }
}

.Container {
  min-width: to-rem(320);
  width: 100%;
  max-width: to-rem(800);
  margin: 0 auto;
  padding: 0 to-rem(32);
  position: relative;
  box-sizing: border-box;
  @media (min-width: 1200px) {
    max-width: to-rem(1000);
  }
  @media (min-width: 1400px) {
    max-width: to-rem(1200);
  }
}
